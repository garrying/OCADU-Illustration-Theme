/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
/* Document
   ========================================================================== */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

.hidden {
  display: none;
  opacity: 0; }

.truncate {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap; }

.hide-text {
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap; }

@keyframes shake {
  from,
  to {
    transform: translate3d(0, 0, 0); }
  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-5px, 0, 0); }
  20%, 40%, 60%, 80% {
    transform: translate3d(5px, 0, 0); } }

@keyframes spin {
  from {
    transform: rotate(0deg); }
  to {
    transform: rotate(360deg); } }

@keyframes cycle {
  0% {
    background-position: 50% 0%; }
  100% {
    background-position: 50% 200%; } }

.loader {
  position: fixed;
  top: calc(50% - 12vh);
  left: calc(50% - 3px);
  z-index: 600;
  width: 2px;
  height: 24vh;
  pointer-events: none;
  background: linear-gradient(0deg, #76b84e 0%, #f8c130 30%, #e92a2f 50%, #ec0a88 65%, #2c3b9a 80%, #03a4d8 100%);
  background-size: 200% 200%;
  animation: cycle 1s linear infinite; }

html {
  overflow-x: hidden;
  -webkit-tap-highlight-color: transparent; }

body {
  height: 100%;
  font: 87.5%/1.5 -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  color: #555;
  background: #fff;
  transition: background 200ms ease-in-out;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }
  @media screen and (min-width: 1920px) {
    body {
      font-size: 150%; } }
  body.grid-focus {
    background: #fc5a41; }

::-moz-selection {
  background: rgba(252, 90, 65, 0.25); }

::selection {
  background: rgba(252, 90, 65, 0.25); }

mark {
  color: #000;
  background: transparent; }

a {
  padding-bottom: 5px;
  color: #000;
  text-decoration: none; }
  a:hover {
    background: none; }
  a img {
    display: block; }

.screen-reader-shortcut {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  position: absolute;
  top: 0;
  left: 40px;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  color: #fff;
  background: #0e0e0f; }
  .screen-reader-shortcut:focus {
    z-index: 600;
    width: auto;
    height: auto;
    padding: 0 10px;
    clip: auto;
    line-height: 49px; }

p {
  font-feature-settings: "kern", "liga", "clig", "calt";
  font-variant-ligatures: common-ligatures, contextual;
  font-kerning: normal;
  text-rendering: optimizeLegibility;
  font-weight: normal; }

abbr {
  font-feature-settings: "c2sc", "smcp";
  font-variant: small-caps;
  letter-spacing: 1px; }

h1 {
  font-feature-settings: "kern", "liga", "clig", "calt";
  font-variant-ligatures: common-ligatures, contextual;
  font-kerning: normal;
  text-rendering: optimizeLegibility;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  font-size: 1.61803em;
  font-weight: normal;
  color: #000;
  font-style: normal; }

h2 {
  font-feature-settings: "kern", "liga", "clig", "calt";
  font-variant-ligatures: common-ligatures, contextual;
  font-kerning: normal;
  text-rendering: optimizeLegibility;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  font-size: 1.61803em;
  font-weight: normal;
  color: #000; }

.heading {
  font-feature-settings: "kern", "liga", "clig", "calt";
  font-variant-ligatures: common-ligatures, contextual;
  font-kerning: normal;
  text-rendering: optimizeLegibility;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  font-size: 1.61803em;
  font-weight: normal;
  color: #000; }

figure {
  margin: 0; }
  figure img {
    display: block;
    max-width: 100%;
    height: auto; }

.image-modal-container-full-image {
  position: relative;
  z-index: 200;
  max-width: 100%;
  max-height: 100%;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  object-fit: contain;
  will-change: transform; }

.gallery-icon-anchor {
  cursor: zoom-in;
  background: none; }
  .gallery-icon-anchor img {
    margin: 0 auto; }

@-moz-document url-prefix() {
  .gallery-icon-anchor img {
    width: 100%; } }

ul {
  padding: 0;
  margin: 0;
  list-style-type: none; }

dl {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  dl dd {
    width: 87%;
    margin: 0;
    margin-bottom: 1em; }
  dl dt {
    width: 10%;
    margin-right: 3%; }

input {
  font-feature-settings: "kern", "liga", "clig", "calt";
  font-variant-ligatures: common-ligatures, contextual;
  font-kerning: normal;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  border-radius: 0; }

input[type=search] {
  -webkit-appearance: none; }

button {
  font-feature-settings: "kern", "liga", "clig", "calt";
  font-variant-ligatures: common-ligatures, contextual;
  font-kerning: normal;
  text-rendering: optimizeLegibility;
  padding: 0;
  background: transparent;
  border: 0; }
  button:focus {
    outline: thin dotted; }

::-webkit-input-placeholder {
  color: rgba(255, 255, 255, 0.75); }

:-moz-placeholder {
  color: rgba(255, 255, 255, 0.75); }

::-moz-placeholder {
  color: rgba(255, 255, 255, 0.75); }

:-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.75); }

.grid {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: start;
      align-items: flex-start;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }

.illustrators-grid {
  width: 71.8vw;
  transition: transform 800ms cubic-bezier(0.19, 1, 0.22, 1); }
  .illustrators-grid.blur .gallery-item, .illustrators-grid:hover .gallery-item {
    filter: grayscale(1) contrast(135%);
    opacity: 0.25; }
  .illustrators-grid .gallery-item {
    margin: 0 4% 4% 0;
    transition: opacity 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275), filter 400ms cubic-bezier(0.175, 0.885, 0.32, 1.275); }
    .illustrators-grid .gallery-item:hover {
      filter: grayscale(0);
      opacity: 1; }
  .illustrators-grid .illustrator-meta-label {
    margin-bottom: 0;
    font-size: 0.857em; }
  .illustrators-grid .illustrator-name {
    color: #555; }
  .illustrators-grid .bricklayer-column:last-child .gallery-item {
    margin-right: 0; }

@-moz-document url-prefix() {
  .illustrators-grid {
    will-change: transform; } }

.gallery-grid {
  margin-top: 1%; }
  .gallery-grid .bricklayer-column-sizer {
    width: 50%; }
    @media screen and (min-width: 1920px) {
      .gallery-grid .bricklayer-column-sizer {
        width: 33.3333333333%; } }
  @media screen and (max-width: 667px) {
    .gallery-grid .bricklayer-column:last-child .gallery-item {
      margin-right: 0; } }

.bricklayer-column-sizer {
  display: none;
  width: 33.333%; }
  @media screen and (max-width: 667px) {
    .bricklayer-column-sizer {
      width: 50%; } }
  @media screen and (max-width: 320px) {
    .bricklayer-column-sizer {
      width: 100%; } }
  @media screen and (min-width: 1024px) {
    .bricklayer-column-sizer {
      width: 25%; } }
  @media screen and (min-width: 1920px) {
    .bricklayer-column-sizer {
      width: 16.6666667%; } }

.bricklayer-column {
  -ms-flex: 1;
      flex: 1; }

.touchevents .illustrators-grid.blur .gallery-item, .touchevents .illustrators-grid:hover .gallery-item {
  filter: grayscale(0);
  opacity: 1; }

.panel {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  z-index: 200;
  display: -ms-flexbox;
  display: flex;
  width: 30vw;
  color: #fff;
  background: #0e0e0f;
  outline: 0;
  box-shadow: 0 2px 0 4px rgba(0, 0, 0, 0.05);
  transform: translateX(-100%);
  -ms-flex-line-pack: center;
      align-content: center;
  -ms-flex-align: center;
      align-items: center;
  will-change: transform; }
  @media screen and (max-width: 1024px) {
    .panel {
      width: 40vw; } }
  @media screen and (max-width: 667px) {
    .panel {
      width: calc(100vw - 44px); } }

.panel-inner {
  width: 100%;
  padding-left: calc(4% + 40px); }
  @media screen and (max-width: 1024px) {
    .panel-inner {
      margin-left: -20px; } }

.close-panel {
  position: absolute;
  top: 20px;
  right: 20px;
  z-index: 300;
  display: block;
  width: 22px;
  height: 22px;
  cursor: pointer; }
  @media screen and (max-width: 667px) {
    .close-panel {
      display: none; } }

.panel-colophon {
  position: fixed;
  right: 25px;
  bottom: 20px;
  z-index: 100;
  width: 1.1em;
  height: 1.75em;
  color: #fff;
  opacity: 0; }

.search-container {
  -ms-flex-align: start;
      align-items: flex-start; }

.search-form {
  display: -ms-flexbox;
  display: flex;
  margin-top: 10em;
  -ms-flex-align: center;
      align-items: center; }
  .search-form label {
    position: relative;
    width: 100%; }
  .search-form .search-field {
    width: 100%;
    box-sizing: border-box;
    padding: 1em 0;
    font-size: 1.61803em;
    background: transparent;
    border: 1px solid rgba(255, 255, 255, 0.02);
    border-width: 0 0 1px;
    transition: border 300ms ease-in-out;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased; }
    .search-form .search-field:focus, .search-form .search-field:hover {
      border-color: rgba(255, 255, 255, 0.25);
      outline: 0; }
  .search-form .search-submit {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    width: 44px;
    height: 44px;
    margin-right: 15px;
    margin-left: 15px; }

.autocomplete-suggestion {
  padding: 0.5em 0;
  color: rgba(255, 255, 255, 0.5);
  cursor: pointer;
  transition: color, 300ms, ease-in-out; }
  .autocomplete-suggestion.autocomplete-selected, .autocomplete-suggestion:hover {
    color: white; }

.autocomplete-no-suggestion {
  padding: 0.5em 0; }

.search-title {
  padding: 4em 0;
  color: #555; }
  @media screen and (max-width: 667px) {
    .search-title {
      padding: 0;
      margin: 0; } }

.search-loader {
  position: absolute;
  top: 150%;
  left: calc(50% - 1em/2);
  display: none;
  width: 1em;
  height: 1em;
  background: #fff;
  border-radius: 50%;
  animation-name: shake;
  animation-duration: 1s;
  animation-fill-mode: both;
  animation-iteration-count: infinite; }

.archive-grid {
  width: 75vw;
  margin: 0 auto; }
  @media screen and (max-width: 1024px) {
    .archive-grid {
      width: 85vw;
      margin-right: 0; } }
  @media screen and (max-width: 667px) {
    .archive-grid {
      width: 100vw;
      padding: 20px;
      margin: 50px 0 0; } }
  @media screen and (max-width: 320px) {
    .archive-grid {
      -ms-flex-direction: column;
          flex-direction: column; } }
  .archive-grid .illustrator-meta-container {
    margin: 0.67em 0; }
    .archive-grid .illustrator-meta-container .illustrator-title {
      margin: 0; }
  .archive-grid:hover .gallery-item {
    opacity: 0.9; }
  .archive-grid .gallery-item {
    margin-bottom: 10%; }
    .archive-grid .gallery-item:hover {
      filter: grayscale(0);
      opacity: 1; }

@media screen and (min-width: 667px) {
  .home-grid {
    transform: translatex(35vw); } }

@media screen and (max-width: 667px) {
  .home-grid {
    width: 100vw;
    padding: 20px;
    margin: 50px 0 0;
    transform: translatex(0); } }

.no-touchevents .home-grid:hover {
  transform: translatex(28.2vw); }
  @media screen and (max-width: 667px) {
    .no-touchevents .home-grid:hover {
      transform: translatex(0); } }

.touchevents .home-grid {
  transform: translatex(28.2vw); }
  @media screen and (max-width: 667px) {
    .touchevents .home-grid {
      transform: translatex(0); } }

.home-grid .illustrator-meta-container {
  display: none; }

.illustrator-image {
  position: relative; }
  .illustrator-image img {
    position: absolute;
    top: 0;
    left: 0;
    filter: grayscale(1);
    opacity: 0;
    transition: opacity 300ms ease-in-out, filter 800ms ease-in-out; }
  .illustrator-image .lazyloaded {
    filter: grayscale(0);
    opacity: 1; }
  .illustrator-image .illustrator-placeholder {
    display: block;
    width: 100%;
    height: auto; }

.archive .section-indicator-index {
  position: fixed;
  left: 40px;
  z-index: 100;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  font-size: 2.5vw;
  background: none;
  -ms-flex-align: center;
      align-items: center; }
  @media screen and (max-width: 1024px) {
    .archive .section-indicator-index {
      left: 20px;
      font-size: 4vw; } }
  @media screen and (max-width: 667px) {
    .archive .section-indicator-index {
      display: none; } }

.archive .section-indicator {
  color: #000;
  cursor: help;
  transition: color 300ms ease-in-out; }
  .archive .section-indicator:hover {
    color: #fff; }

.colophon {
  position: absolute;
  bottom: 0;
  margin: 0 0 20px;
  font-size: 0.8rem;
  color: #000; }
  @media screen and (max-width: 667px) {
    .colophon {
      display: none; } }

.page-inner {
  max-width: 800px;
  padding: 0 8%;
  margin: 50px auto 100px;
  font-size: 1.1em; }
  @media screen and (max-width: 667px) {
    .page-inner {
      padding: 0 20px;
      margin-top: 8em;
      font-size: 1em; } }
  @media screen and (max-width: 1024px) {
    .page-inner {
      max-width: 700px; } }
  @media screen and (min-width: 1920px) and (max-width: 2560px) {
    .page-inner {
      max-width: 900px;
      padding: 0; } }
  .page-inner .entry-title {
    font-size: 2.61803em; }

.faculty-list {
  display: -ms-flexbox;
  display: flex;
  color: #000; }
  .faculty-list .span1 {
    width: 50%; }

.error-body {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: -ms-flexbox;
  display: flex;
  padding: 4em 0;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  font-size: 1.75vw; }
  @media screen and (max-width: 667px) {
    .error-body {
      -ms-flex-pack: start;
          justify-content: flex-start;
      padding: 0 20px;
      font-size: 3.5vw; } }

.year-select .panel-inner {
  height: 100%;
  padding-top: 140px;
  padding-bottom: 60px; }
  @media screen and (max-width: 667px) {
    .year-select .panel-inner {
      padding-top: 50px;
      padding-bottom: 20px; } }

.year-select-wrapper {
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around; }

.year-item {
  display: block;
  font-size: 2.61803em;
  color: #fff;
  background: none;
  opacity: 0;
  transition: margin-left 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transform: translateX(-20px); }
  @media screen and (max-width: 667px) {
    .year-item {
      font-size: 1.61803em; } }
  .year-item:hover, .year-item:focus {
    margin-left: 10px;
    outline-color: #fff; }

.logo {
  font-weight: 700;
  background: none;
  transition: color 300ms ease-in-out; }

.logo-wrapper {
  margin-bottom: 0.5em; }

.heading-inner {
  position: fixed;
  top: 20px;
  left: 40px;
  z-index: 300; }
  @media screen and (max-width: 667px) {
    .heading-inner {
      right: 20px;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-align: baseline;
          align-items: baseline;
      -ms-flex-pack: justify;
          justify-content: space-between; } }
  @media screen and (max-width: 1024px) {
    .heading-inner {
      left: 20px; } }

.header-item {
  padding: 0.25em 0;
  color: rgba(0, 0, 0, 0.5);
  transition: color 300ms ease-in-out; }
  .header-item:hover {
    color: #000; }
  @media screen and (max-width: 667px) {
    .header-item {
      padding: 0; } }

.inactive {
  color: rgba(255, 255, 255, 0.3); }
  .inactive:hover {
    color: #fff; }

.invert {
  color: #fff; }
  .invert:hover {
    color: #fff; }

.single-illustrator {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
      flex-flow: row wrap; }
  @media screen and (max-width: 667px) {
    .single-illustrator {
      -ms-flex-flow: column;
          flex-flow: column; } }

.illustrator-gallery-container {
  -ms-flex: 1 1 70%;
      flex: 1 1 70%; }
  @media screen and (max-width: 1024px) {
    .illustrator-gallery-container {
      -ms-flex-preferred-size: 60%;
          flex-basis: 60%; } }
  @media screen and (max-width: 667px) {
    .illustrator-gallery-container {
      padding: 20px; } }
  .illustrator-gallery-container .gallery-item {
    margin: 0 2% 2% 0;
    opacity: 0; }

.illustrator-meta {
  position: relative;
  font-size: 0.925em;
  -ms-flex: 1 1 30%;
      flex: 1 1 30%; }
  @media screen and (max-width: 1024px) {
    .illustrator-meta {
      font-size: 0.857em; } }
  @media screen and (max-width: 667px) {
    .illustrator-meta {
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%; } }
  .illustrator-meta .illustrator-meta-wrapper {
    position: fixed;
    top: 0;
    left: 40px;
    display: -ms-flexbox;
    display: flex;
    width: calc(30% - 60px);
    height: 100%;
    -ms-flex-flow: row wrap;
        flex-flow: row wrap;
    -ms-flex-align: end;
        align-items: flex-end;
    font-size: 0.929em;
    transition: opacity 180ms ease-in-out; }
    .illustrator-meta .illustrator-meta-wrapper p {
      margin-top: 0; }
    .illustrator-meta .illustrator-meta-wrapper h1,
    .illustrator-meta .illustrator-meta-wrapper h2 {
      padding: 0.67em 0;
      margin: 0;
      font-size: 1em;
      line-height: 1em; }
    .illustrator-meta .illustrator-meta-wrapper .thesis-title {
      line-height: 1.4em; }
    @media screen and (max-width: 1024px) {
      .illustrator-meta .illustrator-meta-wrapper {
        left: 20px;
        width: 31%; } }
    @media screen and (max-width: 667px) {
      .illustrator-meta .illustrator-meta-wrapper {
        position: static;
        width: 100%;
        padding: 0 20px;
        margin: 60px 0 0;
        font-size: 1em; } }
  .illustrator-meta .illustrator-meta-wrapper-inner {
    width: 100%; }
    @media screen and (max-width: 667px) {
      .illustrator-meta .illustrator-meta-wrapper-inner {
        margin-right: 0; } }
  .illustrator-meta .illustrator-meta-description {
    margin-bottom: 2em; }
    .illustrator-meta .illustrator-meta-description p {
      margin-left: 0.5em; }
  .illustrator-meta .meta {
    line-height: 1.85em; }
    .illustrator-meta .meta div {
      padding-left: 0.5em; }

.illustrator-nav-single {
  -ms-flex-item-align: end;
      align-self: flex-end;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-positive: 1;
      flex-grow: 1;
  max-width: 100%;
  border-bottom: 4px solid #fc5a41; }
  @media screen and (max-width: 667px) {
    .illustrator-nav-single {
      margin-top: 2em;
      border-bottom: 1px solid rgba(0, 0, 0, 0.1); } }
  .illustrator-nav-single a {
    display: block;
    padding: 10px;
    color: #555;
    background: none;
    transition: color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275); }
    .illustrator-nav-single a:hover {
      color: #000; }
  .illustrator-nav-single .nav-previous,
  .illustrator-nav-single .nav-next {
    -ms-flex-positive: 1;
        flex-grow: 1; }
    .illustrator-nav-single .nav-previous:empty,
    .illustrator-nav-single .nav-next:empty {
      display: none; }
  .illustrator-nav-single .nav-next {
    text-align: right; }
    .illustrator-nav-single .nav-next a {
      padding-right: 20px; }
      @media screen and (max-width: 667px) {
        .illustrator-nav-single .nav-next a {
          padding-right: 0; } }
  .illustrator-nav-single .section-indicator-single {
    padding-left: 0.5em;
    font-weight: 700;
    white-space: nowrap; }
  .illustrator-nav-single .indicator {
    margin-right: 4px;
    font-weight: 400; }

.image-modal-wrapper {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 30%;
  z-index: 300;
  background: #131314; }
  @media screen and (max-width: 1024px) {
    .image-modal-wrapper {
      left: 0; } }
  .image-modal-wrapper .image-modal-container {
    position: absolute;
    top: 2%;
    right: 2%;
    bottom: 2%;
    left: 2%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-pack: center;
        justify-content: center; }
  .image-modal-wrapper .close-panel {
    display: block; }

.miniview-container {
  position: absolute;
  right: 20px;
  bottom: 20px;
  z-index: 300; }
  @media screen and (max-width: 667px) {
    .miniview-container {
      display: none; } }

.miniview {
  width: 2vw;
  -moz-column-count: 2;
       column-count: 2;
  -moz-column-gap: 2px;
       column-gap: 2px;
  line-height: 0;
  transition: width 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275); }
  @media screen and (max-width: 1024px) {
    .miniview {
      width: 3vw; } }
  .miniview:hover {
    width: 3vw; }
  .miniview .mini-item {
    width: 100%;
    padding-bottom: 2px;
    cursor: pointer;
    page-break-inside: avoid;
         break-inside: avoid; }
  .miniview .mini-item-inner {
    display: block;
    max-width: 100%;
    height: auto;
    padding: 2px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: border 300ms ease-in-out, background 300ms ease-in-out; }
    .miniview .mini-item-inner.active, .miniview .mini-item-inner:hover {
      border: 1px solid rgba(255, 255, 255, 0.5); }
    .miniview .mini-item-inner:hover {
      background: rgba(255, 255, 255, 0.25); }

.title {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  display: -ms-flexbox;
  display: flex;
  width: 28.2vw;
  padding-left: 40px;
  font-size: 1.285vw;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: distribute;
      justify-content: space-around; }
  @media screen and (max-width: 1024px) {
    .title {
      width: 30vw;
      padding-left: 20px;
      font-size: 1.5vw; } }
  @media screen and (max-width: 667px) {
    .title {
      display: none; } }
  .title .active {
    visibility: visible;
    opacity: 1;
    transform: translateX(0); }
  .title .title-primary {
    margin: 0;
    font-size: 2.5em;
    line-height: 1.5em;
    white-space: nowrap;
    pointer-events: none; }
  .title .title-secondary {
    margin-bottom: 0;
    font-size: 1.2em; }
  .title .empty {
    display: none; }
    .title .empty + .title-author {
      font-size: 2.5vw; }
  .title a {
    pointer-events: auto; }

.title-unit {
  position: absolute;
  top: 0;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  color: #000;
  pointer-events: none;
  visibility: hidden;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-positive: 1;
      flex-grow: 1;
  -ms-flex-pack: center;
      justify-content: center;
  opacity: 0;
  transition: transform 800ms cubic-bezier(0.19, 1, 0.22, 1), opacity 300ms cubic-bezier(0.19, 1, 0.22, 1), visibility 800ms cubic-bezier(0.19, 1, 0.22, 1);
  will-change: transform; }

.title-unit-init {
  font-size: 0.825em;
  transform: translateX(-40px); }
  @media screen and (min-width: 1024px) {
    .title-unit-init.active {
      pointer-events: none; }
      .title-unit-init.active .unit {
        pointer-events: auto; } }

.title-unit-illustrator {
  color: #fff;
  transition: transform 1000ms cubic-bezier(0.19, 1, 0.22, 1);
  transform: translateX(80px); }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/