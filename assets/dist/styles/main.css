/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

.hidden {
  display: none;
  opacity: 0;
}

.truncate {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.hide-text {
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap;
}

@-webkit-keyframes shake {
  from,
  to {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
  }
  10%, 30%, 50%, 70%, 90% {
    -webkit-transform: translate3d(-5px, 0, 0);
            transform: translate3d(-5px, 0, 0);
  }
  20%, 40%, 60%, 80% {
    -webkit-transform: translate3d(5px, 0, 0);
            transform: translate3d(5px, 0, 0);
  }
}

@keyframes shake {
  from,
  to {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
  }
  10%, 30%, 50%, 70%, 90% {
    -webkit-transform: translate3d(-5px, 0, 0);
            transform: translate3d(-5px, 0, 0);
  }
  20%, 40%, 60%, 80% {
    -webkit-transform: translate3d(5px, 0, 0);
            transform: translate3d(5px, 0, 0);
  }
}

@-webkit-keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@-webkit-keyframes cycle {
  0% {
    background-position: 50% 0%;
  }
  100% {
    background-position: 50% 200%;
  }
}

@keyframes cycle {
  0% {
    background-position: 50% 0%;
  }
  100% {
    background-position: 50% 200%;
  }
}

.loader {
  position: fixed;
  top: calc(50% - 12vh);
  left: calc(50% - 2px);
  z-index: 999;
  width: 2px;
  height: 24vh;
  pointer-events: none;
  background: linear-gradient(0deg, #76b84e 0%, #f8c130 30%, #e92a2f 50%, #ec0a88 65%, #2c3b9a 80%, #03a4d8 100%);
  background-size: 200% 200%;
  -webkit-animation: cycle 1s linear infinite;
          animation: cycle 1s linear infinite;
}

html {
  overflow-x: hidden;
  -webkit-tap-highlight-color: transparent;
}

body {
  height: 100%;
  font: 87.5%/1.5 "Neutral", Helvetica, Arial, sans-serif;
  color: #666;
  background: #fff;
  transition: background 300ms ease-in-out;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media screen and (min-width: 1920px) {
  body {
    font-size: 150%;
  }
}

body.grid-focus {
  background: #faeded;
}

::-moz-selection {
  background: #f4d9d9;
}

::selection {
  background: #f4d9d9;
}

mark {
  color: #000;
  background: transparent;
}

a {
  color: #000;
  text-decoration: none;
  border-width: 0 0 3px;
  border-image-source: url("../images/wavy.b.svg");
  border-image-slice: 0 0 3 0;
  border-image-width: 3px 6px;
  border-image-outset: 0 6px 1px 6px;
  border-image-repeat: repeat;
}

a:hover {
  border-image: none;
}

a img {
  display: block;
}

.screen-reader-shortcut {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  position: absolute;
  top: 0;
  left: 40px;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  color: #fff;
  background: #0e0e0f;
  border: 0;
}

.screen-reader-shortcut:focus {
  z-index: 600;
  width: auto;
  height: auto;
  padding: 0 10px;
  clip: auto;
  line-height: 49px;
}

h1, h2, .heading, p, input, button {
  font-feature-settings: "kern", "liga", "clig", "calt";
  font-variant-ligatures: common-ligatures, contextual;
  font-kerning: normal;
  text-rendering: optimizeLegibility;
}

h1, h2, .heading {
  font-family: "Neutral", Helvetica, Arial, sans-serif;
  font-size: 1.618034em;
  font-weight: normal;
  color: #000;
}

p {
  font-weight: normal;
}

abbr {
  font-feature-settings: "c2sc", "smcp";
  font-variant: small-caps;
  letter-spacing: 1px;
}

h1 {
  font-style: normal;
}

figure {
  margin: 0;
}

figure img {
  display: block;
  max-width: 100%;
  height: auto;
}

#full-image {
  position: relative;
  z-index: 120;
  max-width: 100%;
  max-height: 100%;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  object-fit: contain;
  will-change: transform;
}

.gallery-icon-anchor {
  cursor: zoom-in;
}

.gallery-icon-anchor img {
  width: 100%;
}

ul {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

dl {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}

dl dd {
  width: 87%;
  margin: 0;
  margin-bottom: 1em;
}

dl dt {
  width: 10%;
  margin-right: 3%;
}

input {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-family: "Neutral", Helvetica, Arial, sans-serif;
  border-radius: 0;
}

input[type=search] {
  -webkit-appearance: none;
}

.btn:focus,
button:focus {
  outline: thin dotted;
}

::-webkit-input-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

:-moz-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

::-moz-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

:-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

.grid {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
          align-items: flex-start;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}

.illustrators-grid {
  width: 71.8vw;
  transition: -webkit-transform 800ms cubic-bezier(0.19, 1, 0.22, 1);
  transition: transform 800ms cubic-bezier(0.19, 1, 0.22, 1);
  transition: transform 800ms cubic-bezier(0.19, 1, 0.22, 1), -webkit-transform 800ms cubic-bezier(0.19, 1, 0.22, 1);
  will-change: transform;
}

.illustrators-grid.blur .gallery-item, .illustrators-grid:hover .gallery-item {
  -webkit-filter: grayscale(1) contrast(135%);
          filter: grayscale(1) contrast(135%);
  opacity: 0.25;
}

.illustrators-grid .gallery-item {
  margin: 0 4% 4% 0;
  transition: opacity 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275), -webkit-filter 400ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transition: opacity 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275), filter 400ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transition: opacity 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275), filter 400ms cubic-bezier(0.175, 0.885, 0.32, 1.275), -webkit-filter 400ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.illustrators-grid .gallery-item:hover {
  -webkit-filter: grayscale(0);
          filter: grayscale(0);
  opacity: 1;
}

.illustrators-grid .illustrator-meta-label {
  margin-bottom: 0;
  font-size: 0.857em;
}

.illustrators-grid .illustrator-name {
  color: #666;
}

.illustrators-grid .bricklayer-column:last-child .gallery-item {
  margin-right: 0;
}

.gallery-grid {
  margin-top: 1%;
}

.gallery-grid .bricklayer-column-sizer {
  width: 50%;
}

@media screen and (min-width: 1920px) {
  .gallery-grid .bricklayer-column-sizer {
    width: 33.3333333333%;
  }
}

@media screen and (max-width: 667px) {
  .gallery-grid .bricklayer-column:last-child .gallery-item {
    margin-right: 0;
  }
}

.bricklayer-column-sizer {
  display: none;
  width: 33.333%;
}

@media screen and (max-width: 667px) {
  .bricklayer-column-sizer {
    width: 50%;
  }
}

@media screen and (max-width: 320px) {
  .bricklayer-column-sizer {
    width: 100%;
  }
}

@media screen and (min-width: 1024px) {
  .bricklayer-column-sizer {
    width: 25%;
  }
}

@media screen and (min-width: 1920px) {
  .bricklayer-column-sizer {
    width: 16.6666667%;
  }
}

.bricklayer-column {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.touchevents .illustrators-grid.blur .gallery-item, .touchevents .illustrators-grid:hover .gallery-item {
  -webkit-filter: grayscale(0);
          filter: grayscale(0);
  opacity: 1;
}

.panel {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  width: 30vw;
  z-index: 200;
  outline: 0;
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%);
  background: #0e0e0f;
  box-shadow: 0 2px 0 4px rgba(0, 0, 0, 0.05);
  color: #fff;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-content: center;
      -ms-flex-line-pack: center;
          align-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  will-change: transform;
}

@media screen and (max-width: 1024px) {
  .panel {
    width: 40vw;
  }
}

@media screen and (max-width: 667px) {
  .panel {
    width: calc(100vw - 44px);
  }
}

.panel-inner {
  width: 100%;
  padding-left: calc(4% + 40px);
}

@media screen and (max-width: 1024px) {
  .panel-inner {
    margin-left: -20px;
  }
}

.close-panel {
  z-index: 400;
  display: block;
  position: absolute;
  cursor: pointer;
  top: 20px;
  right: 20px;
  width: 22px;
  height: 22px;
  background: url("../images/close.svg") no-repeat;
}

@media screen and (max-width: 667px) {
  .close-panel {
    display: none;
  }
}

button {
  background: transparent;
  border: 0;
  padding: 0;
}

.panel-colophon {
  opacity: 0;
  border: 0;
  position: fixed;
  bottom: 20px;
  right: 25px;
  z-index: 120;
  color: #fff;
  width: 1.1em;
  height: 1.75em;
  background: url("../images/colophon.svg") no-repeat;
  background-size: contain;
}

.search-container {
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
              -ms-grid-row-align: flex-start;
          align-items: flex-start;
}

.search-form {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-top: 10em;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
}

.search-form label {
  position: relative;
  width: 100%;
}

.search-form .twitter-typeahead {
  width: 100%;
}

.search-form .twitter-typeahead:after {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  background: linear-gradient(-90deg, #0e0e0f, rgba(14, 14, 15, 0));
  height: 100%;
  width: 40px;
}

.search-form .search-field {
  width: 100%;
  box-sizing: border-box;
  padding: 1em 0;
  font-size: 1.618034em;
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.02);
  border-width: 0 0 1px 0;
  transition: border 300ms ease-in-out;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.search-form .search-field:focus, .search-form .search-field:hover {
  border-color: rgba(255, 255, 255, 0.25);
  outline: 0;
}

.search-form .search-submit {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  width: 44px;
  height: 44px;
  margin-right: 15px;
  margin-left: 15px;
  background: url("../images/search.svg") no-repeat center center;
}

.search-form .tt-hint {
  color: rgba(255, 255, 255, 0.05);
}

.search-form .tt-menu {
  width: 100%;
  font-size: 1.618034em;
}

.search-form .tt-suggestion {
  width: 100%;
  padding: 1em 20px;
  cursor: pointer;
  background: rgba(255, 255, 255, 0.02);
  transition: background, 300ms, ease-in-out;
}

.search-form .tt-suggestion:hover {
  background: rgba(255, 255, 255, 0.05);
}

.search-title {
  color: #666;
  padding: 4em 0;
}

.error-body {
  padding: 4em 0;
}

.search-loader {
  position: absolute;
  top: 150%;
  left: calc(50% - 1em/2);
  display: none;
  width: 1em;
  height: 1em;
  background: #fff;
  border-radius: 50%;
  -webkit-animation-name: shake;
          animation-name: shake;
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}

.archive-grid {
  width: 75vw;
  margin: 0 auto;
}

@media screen and (max-width: 1024px) {
  .archive-grid {
    width: 85vw;
    margin-right: 0;
  }
}

@media screen and (max-width: 667px) {
  .archive-grid {
    width: 100vw;
    padding: 20px;
    margin: 50px 0 0;
  }
}

.archive-grid .gallery-item {
  margin-bottom: 10%;
}

.home-grid {
  -webkit-transform: translatex(35vw);
          transform: translatex(35vw);
}

@media screen and (max-width: 667px) {
  .home-grid {
    width: 100vw;
    padding: 20px;
    margin: 50px 0 0;
    -webkit-transform: translatex(0);
            transform: translatex(0);
  }
}

.home-grid:hover {
  -webkit-transform: translatex(28.2vw);
          transform: translatex(28.2vw);
}

@media screen and (max-width: 667px) {
  .home-grid:hover {
    -webkit-transform: translatex(0);
            transform: translatex(0);
  }
}

.home-grid .illustrator-meta-container {
  display: none;
}

.illustrator-image {
  position: relative;
}

.illustrator-image img {
  position: absolute;
  top: 0;
  left: 0;
  -webkit-filter: grayscale(1);
          filter: grayscale(1);
  opacity: 0;
  transition: opacity 300ms ease-in-out, -webkit-filter 800ms ease-in-out;
  transition: opacity 300ms ease-in-out, filter 800ms ease-in-out;
  transition: opacity 300ms ease-in-out, filter 800ms ease-in-out, -webkit-filter 800ms ease-in-out;
}

.illustrator-image .lazyloaded {
  -webkit-filter: grayscale(0);
          filter: grayscale(0);
  opacity: 1;
}

.illustrator-image .illustrator-placeholder {
  display: block;
  width: 100%;
  height: auto;
}

.archive .section-indicator-index {
  position: fixed;
  left: 40px;
  z-index: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  font-size: 2.5vw;
  border: 0;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
}

@media screen and (max-width: 1024px) {
  .archive .section-indicator-index {
    left: 20px;
    font-size: 4vw;
  }
}

@media screen and (max-width: 667px) {
  .archive .section-indicator-index {
    display: none;
  }
}

.archive .section-indicator {
  color: #000;
  cursor: help;
  border: 0;
}

.home-colophon {
  display: inline-block;
  width: 1.1em;
  height: 1.75em;
  margin-right: 0.2em;
  vertical-align: bottom;
  background: url("../images/colophon.b.svg") no-repeat;
  background-size: contain;
  border: 0;
}

@media screen and (max-width: 1024px) {
  .home-colophon {
    display: none;
  }
}

.colophon {
  position: absolute;
  bottom: 0;
  margin: 0 0 20px;
  font-size: 0.8rem;
  color: #000;
}

@media screen and (max-width: 667px) {
  .colophon {
    display: none;
  }
}

.page-inner {
  max-width: 800px;
  padding: 0 8%;
  margin: 50px auto 100px;
  font-size: 1.1em;
}

@media screen and (max-width: 667px) {
  .page-inner {
    padding: 0 20px;
    margin-top: 8em;
    font-size: 1em;
  }
}

@media screen and (max-width: 1024px) {
  .page-inner {
    max-width: 700px;
  }
}

@media screen and (min-width: 1920px) and (max-width: 2560px) {
  .page-inner {
    max-width: 900px;
    padding: 0;
  }
}

.page-inner .entry-title {
  font-size: 2.6180340252em;
}

.faculty-list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #000;
}

.faculty-list .span1 {
  width: 50%;
}

.error-body {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  font-size: 1.75vw;
}

@media screen and (max-width: 667px) {
  .error-body {
    font-size: 3.5vw;
  }
}

.year-select .panel-inner {
  height: 100%;
  padding-top: 140px;
  padding-bottom: 60px;
}

@media screen and (max-width: 667px) {
  .year-select .panel-inner {
    padding-bottom: 20px;
    padding-top: 50px;
  }
}

.year-select-wrapper {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
}

.year-item {
  display: block;
  font-size: 2.6180340252em;
  color: #fff;
  border: 0;
  opacity: 0;
  transition: margin-left 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
  -webkit-transform: translateX(-20px);
          transform: translateX(-20px);
}

@media screen and (max-width: 667px) {
  .year-item {
    font-size: 1.618034em;
  }
}

.year-item:hover, .year-item:focus {
  margin-left: 10px;
  outline-color: #fff;
}

.year-item.active::after {
  display: inline-block;
  line-height: 1em;
  margin-left: 0.25em;
  font-size: 1.2em;
  content: "";
  width: 0.8em;
  height: 0.8em;
  margin-bottom: -0.08em;
  -webkit-animation-name: spin;
          animation-name: spin;
  -webkit-animation-duration: 20s;
          animation-duration: 20s;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
  -webkit-transform-origin: 50% 50%;
          transform-origin: 50% 50%;
  background: url("../images/asterisk.svg") no-repeat;
  background-size: contain;
}

.logo {
  font-weight: 700;
  border-image: none;
  transition: color 300ms ease-in-out;
}

.logo-wrapper {
  margin-bottom: 0.5em;
}

.heading-inner {
  position: fixed;
  top: 20px;
  left: 40px;
  z-index: 300;
}

@media screen and (max-width: 667px) {
  .heading-inner {
    right: 20px;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: baseline;
        -ms-flex-align: baseline;
            align-items: baseline;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }
}

@media screen and (max-width: 1024px) {
  .heading-inner {
    left: 20px;
  }
}

.header-item {
  padding: 0.25em 0;
  transition: color 300ms ease-in-out;
}

.header-item:hover {
  color: #000;
}

@media screen and (max-width: 667px) {
  .header-item {
    padding: 0;
  }
}

.inactive:hover {
  color: #fff;
}

.invert {
  color: #fff;
}

.invert:hover {
  color: #fff;
}

.single-illustrator {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
}

.illustrator-gallery-container {
  -webkit-flex: 1 1 70%;
      -ms-flex: 1 1 70%;
          flex: 1 1 70%;
}

@media screen and (max-width: 1024px) {
  .illustrator-gallery-container {
    -webkit-flex-basis: 60%;
        -ms-flex-preferred-size: 60%;
            flex-basis: 60%;
  }
}

@media screen and (max-width: 667px) {
  .illustrator-gallery-container {
    padding: 20px;
  }
}

.illustrator-gallery-container .gallery-item {
  margin: 0 2% 2% 0;
  opacity: 0;
}

@media screen and (max-width: 320px) {
  .illustrator-gallery-container .gallery-item {
    margin: 2% 0;
  }
}

.illustrator-meta {
  position: relative;
  z-index: 20;
  font-size: 0.857em;
  -webkit-flex: 1 1 30%;
      -ms-flex: 1 1 30%;
          flex: 1 1 30%;
}

@media screen and (max-width: 667px) {
  .illustrator-meta {
    -webkit-flex-basis: 100%;
        -ms-flex-preferred-size: 100%;
            flex-basis: 100%;
  }
}

.illustrator-meta .illustrator-meta-wrapper {
  position: fixed;
  top: 0;
  left: 40px;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: calc(30% - 60px);
  height: 100%;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-align-items: flex-end;
      -ms-flex-align: end;
          align-items: flex-end;
  font-size: 0.929em;
  transition: opacity 180ms ease-in-out;
}

.illustrator-meta .illustrator-meta-wrapper p {
  margin-top: 0;
}

.illustrator-meta .illustrator-meta-wrapper h1,
.illustrator-meta .illustrator-meta-wrapper h2 {
  padding: 0.67em 0;
  margin: 0;
  font-size: 1em;
  line-height: 1em;
}

.illustrator-meta .illustrator-meta-wrapper .thesis-title {
  line-height: 1.4em;
}

@media screen and (max-width: 1024px) {
  .illustrator-meta .illustrator-meta-wrapper {
    left: 20px;
    width: 31%;
  }
}

@media screen and (max-width: 667px) {
  .illustrator-meta .illustrator-meta-wrapper {
    position: static;
    width: 100%;
    padding: 0 20px;
    margin: 60px 0 0;
    font-size: 1em;
  }
}

.illustrator-meta .illustrator-meta-wrapper-inner {
  width: 100%;
}

@media screen and (max-width: 667px) {
  .illustrator-meta .illustrator-meta-wrapper-inner {
    margin-right: 0;
  }
}

.illustrator-meta .illustrator-meta-description {
  margin-bottom: 2em;
}

.illustrator-meta .illustrator-meta-description p {
  margin-left: 0.5em;
}

.illustrator-meta .meta {
  line-height: 1.85em;
}

.illustrator-meta .meta div {
  padding-left: 0.5em;
}

.illustrator-nav-single {
  -webkit-align-self: flex-end;
      -ms-flex-item-align: end;
          align-self: flex-end;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  max-width: 100%;
  border-bottom: 4px solid #faeded;
}

@media screen and (max-width: 667px) {
  .illustrator-nav-single {
    margin-top: 2em;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  }
}

.illustrator-nav-single a {
  display: block;
  padding: 10px;
  color: #666;
  border-image: none;
  transition: color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.illustrator-nav-single a:hover {
  color: #000;
}

.illustrator-nav-single .nav-previous,
.illustrator-nav-single .nav-next {
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.illustrator-nav-single .nav-previous:empty,
.illustrator-nav-single .nav-next:empty {
  display: none;
}

.illustrator-nav-single .nav-next {
  text-align: right;
}

.illustrator-nav-single .nav-next a {
  padding-right: 20px;
}

@media screen and (max-width: 667px) {
  .illustrator-nav-single .nav-next a {
    padding-right: 0;
  }
}

.illustrator-nav-single .section-indicator-single {
  padding-left: 0.5em;
  font-weight: 700;
  white-space: nowrap;
}

.illustrator-nav-single .indicator {
  margin-right: 4px;
  font-weight: 400;
}

.image-modal-wrapper {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 30%;
  z-index: 400;
  background: #131314;
}

@media screen and (max-width: 1024px) {
  .image-modal-wrapper {
    left: 0;
  }
}

.image-modal-wrapper .image-modal-container {
  position: absolute;
  top: 2%;
  right: 2%;
  bottom: 2%;
  left: 2%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.miniview-container {
  position: absolute;
  right: 20px;
  bottom: 20px;
  z-index: 130;
}

@media screen and (max-width: 667px) {
  .miniview-container {
    display: none;
  }
}

.miniview {
  width: 2vw;
  -webkit-column-count: 2;
     -moz-column-count: 2;
          column-count: 2;
  -webkit-column-gap: 2px;
     -moz-column-gap: 2px;
          column-gap: 2px;
  line-height: 0;
  transition: width 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

@media screen and (max-width: 1024px) {
  .miniview {
    width: 3vw;
  }
}

.miniview:hover {
  width: 3vw;
}

.miniview .mini-item {
  width: 100%;
  padding-bottom: 2px;
  cursor: pointer;
  -webkit-column-break-inside: avoid;
     page-break-inside: avoid;
          break-inside: avoid;
}

.miniview .mini-item-inner {
  display: block;
  max-width: 100%;
  height: auto;
  padding: 2px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: border 300ms ease-in-out, background 300ms ease-in-out;
}

.miniview .mini-item-inner.active, .miniview .mini-item-inner:hover {
  border: 1px solid rgba(255, 255, 255, 0.5);
}

.miniview .mini-item-inner:hover {
  background: rgba(255, 255, 255, 0.25);
}

.title {
  font-size: 1.2vw;
  position: fixed;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  top: 0;
  padding-left: 40px;
  left: 0;
  bottom: 0;
  width: 28.2vw;
  z-index: 1;
}

@media screen and (max-width: 1024px) {
  .title {
    width: 30vw;
    padding-left: 20px;
    font-size: 1.5vw;
  }
}

@media screen and (max-width: 667px) {
  .title {
    display: none;
  }
}

.title .title-unit {
  position: absolute;
  top: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  visibility: hidden;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  opacity: 0;
  transition: opacity 800ms cubic-bezier(0.19, 1, 0.22, 1), visibility 800ms cubic-bezier(0.19, 1, 0.22, 1), -webkit-transform 800ms cubic-bezier(0.19, 1, 0.22, 1);
  transition: transform 800ms cubic-bezier(0.19, 1, 0.22, 1), opacity 800ms cubic-bezier(0.19, 1, 0.22, 1), visibility 800ms cubic-bezier(0.19, 1, 0.22, 1);
  transition: transform 800ms cubic-bezier(0.19, 1, 0.22, 1), opacity 800ms cubic-bezier(0.19, 1, 0.22, 1), visibility 800ms cubic-bezier(0.19, 1, 0.22, 1), -webkit-transform 800ms cubic-bezier(0.19, 1, 0.22, 1);
  will-change: transform;
  color: #000;
}

.title .title-unit-init {
  -webkit-transform: translateX(-40px);
          transform: translateX(-40px);
}

.title .title-unit-illustrator {
  pointer-events: none;
  -webkit-transform: translateX(40px);
          transform: translateX(40px);
}

.title .active {
  visibility: visible;
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.title .title-primary {
  margin: 0 0 0.5em;
  font-size: 2.5em;
  line-height: 1.5em;
  white-space: nowrap;
  pointer-events: none;
}

.title .title-secondary {
  font-size: 1.2em;
}

.title .empty {
  display: none;
}

.title .empty + .title-author {
  font-size: 2.5vw;
}

.title a {
  pointer-events: auto;
}

.title .asterisk {
  display: inline-block;
  vertical-align: baseline;
  margin-bottom: -4px;
  margin-right: 0.2em;
  -webkit-animation-name: spin;
          animation-name: spin;
  -webkit-animation-duration: 20s;
          animation-duration: 20s;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
  width: 1em;
  height: 1em;
  background: url("../images/asterisk.b.svg") no-repeat;
  background-size: contain;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
