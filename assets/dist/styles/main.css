@charset "UTF-8";
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

.hidden {
  display: none;
  opacity: 0;
}

.truncate {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.hide-text {
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap;
}

@font-face {
  font-family: "FoundersGroteskWeb-Bold";
  src: url("../fonts/FoundersGroteskWeb-Bold.eot");
  src: url("../fonts/FoundersGroteskWeb-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/FoundersGroteskWeb-Bold.woff") format("woff");
}

@keyframes backAnimate {
  0% {
    background-position: 0 100%;
  }
  100% {
    background-position: -30px 100%;
  }
}

@keyframes backAnimateSmall {
  0% {
    background-position: 0 100%;
  }
  100% {
    background-position: -23px 100%;
  }
}

.loader {
  position: fixed;
  top: 50%;
  left: 50%;
  z-index: 300;
  display: none;
  width: 100px;
  height: 100px;
  margin-top: -50px;
  margin-left: -50px;
  pointer-events: none;
  background-image: url("../images/underline.svg");
  opacity: 0;
  animation: backAnimate 1s linear infinite;
}

html {
  overflow-x: hidden;
  -webkit-tap-highlight-color: transparent;
}

body {
  height: 100%;
  padding: 0 20px 80px;
  font: 100%/1.6 "minion-pro", Times, "Times New Roman", serif;
  color: #333;
  background: #f2f2f2;
}

@media screen and (max-width: 900px) {
  body {
    padding-top: 60px;
  }
}

::-moz-selection {
  background: rgba(231, 90, 98, 0.25);
}

::selection {
  background: rgba(231, 90, 98, 0.25);
}

a {
  color: #333;
  text-decoration: none;
  background-image: linear-gradient(to bottom, transparent 50%, #e75a62 50%);
  background-repeat: repeat-x;
  background-position: 0 90%;
  background-size: 2px 2px;
}

a img {
  display: block;
}

.screen-reader-shortcut {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  position: absolute;
  top: 0;
  left: 60px;
  width: 1px;
  height: 1px;
  padding: 10px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  color: #fff;
  background: #e75a62;
}

.screen-reader-shortcut:focus {
  top: 2;
  z-index: 600;
  width: auto;
  height: auto;
  padding: 0 10px;
  clip: auto;
  line-height: 49px;
}

h1, h2, .heading, .section-indicator, p, .meta, input {
  -webkit-font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1;
          font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1;
  -webkit-font-kerning: normal;
          font-kerning: normal;
  text-rendering: optimizeLegibility;
}

h1, h2, .heading, .section-indicator {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-family: "FoundersGroteskWeb-Bold", Helvetica, Arial, sans-serif;
  font-style: normal;
  font-weight: 400;
  line-height: 1.6rem;
}

p {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 1rem;
  line-height: 1.4rem;
}

abbr {
  -webkit-font-feature-settings: "c2sc", "smcp";
          font-feature-settings: "c2sc", "smcp";
  letter-spacing: 1px;
}

h1 {
  font-size: 2.618rem;
  font-style: normal;
}

h2 {
  font-size: 1.618rem;
}

.meta {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-style: italic;
}

.meta .phone {
  -webkit-font-feature-settings: 'onum' 0, 'tnum' 1;
          font-feature-settings: 'onum' 0, 'tnum' 1;
}

.illustrator-meta-name {
  display: inline-block;
  font-family: "minion-pro", Times, "Times New Roman", serif;
  font-size: 1rem;
  font-style: italic;
}

.illustrator-meta-name:before {
  display: inline-block;
  font-style: normal;
  color: #e75a62;
  text-indent: -15px;
  content: "※";
}

.thesis-title {
  font-size: 1rem;
  line-height: 1.2rem;
}

figure {
  margin: 0;
}

figure img {
  display: block;
  max-width: 100%;
  height: auto;
  margin: 0 auto;
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.05);
}

.image-modal-tip {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  position: fixed;
  z-index: 600;
  padding: 5px;
  font-family: "FoundersGroteskWeb-Bold", Helvetica, Arial, sans-serif;
  color: rgba(231, 90, 98, 0.5);
}

.image-modal-wrapper {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 30%;
  z-index: 100;
}

@media screen and (max-width: 900px) {
  .image-modal-wrapper {
    left: 0;
  }
}

.image-modal-container {
  position: absolute;
  align-items: center;
  top: 10px;
  right: 10px;
  bottom: 10px;
  left: 10px;
  display: flex;
}

.image-modal-full-image {
  display: flex;
  flex-shrink: 0;
  max-width: 100%;
  max-height: 100%;
  margin: 0 auto;
  cursor: pointer;
  opacity: 0;
}

ul {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

.panel {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 200;
  width: 50%;
  height: 100%;
  overflow-y: scroll;
  font-family: "FoundersGroteskWeb-Bold", Helvetica, Arial, sans-serif;
  visibility: hidden;
  background: linear-gradient(45deg, rgba(231, 90, 98, 0.85), #e75a62);
  outline: 2px solid #e6515a;
  opacity: 0;
  transition: opacity ease-out 300ms, visibility ease-out 0s 300ms;
  transform: translate3d(0, 0, 0);
}

@media screen and (max-width: 1024px) {
  .panel {
    width: 75%;
  }
}

@media screen and (max-width: 500px) {
  .panel {
    width: 100%;
  }
}

.panel.visible {
  visibility: visible;
  opacity: 1;
  transition: opacity 300ms ease-out;
}

.close-panel {
  position: absolute;
  top: 18px;
  right: 20px;
  z-index: 300;
  width: 31px;
  height: 31px;
  padding: 0;
  cursor: pointer;
  background-color: transparent;
  background-image: url("../images/sprite.svg");
  background-repeat: no-repeat;
  background-position: 0 0;
  border: 0;
}

.close-panel.alt {
  background-position: 100% 0;
}

.panel-colophon {
  position: fixed;
  bottom: 20px;
  left: 20px;
  width: 16px;
  height: 23px;
  background: url("../images/sprite.svg");
  background-repeat: no-repeat;
  background-position: 0 100%;
}

.search-form {
  display: flex;
  padding-top: 70px;
  font-size: 3rem;
  color: #fff;
  justify-content: center;
  align-items: center;
}

.search-form label {
  width: 70%;
}

.search-form .twitter-typeahead {
  width: 100%;
  background-image: url("../images/underline-l-w.svg");
  background-repeat: repeat-x;
  background-position: 0 100%;
  background-size: 30px 10px;
}

@media screen and (max-width: 900px) {
  .search-form {
    padding-top: 70px;
    font-size: 3rem;
  }
  .search-form label {
    width: 80%;
  }
}

@media screen and (max-width: 600px) {
  .search-form {
    font-size: 2rem;
  }
}

@media screen and (max-width: 500px) {
  .search-form {
    font-size: 1.7rem;
  }
  .search-form label {
    width: 70%;
  }
}

.search-field {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: block;
  width: 100%;
  padding: 10px 0;
  font-family: "FoundersGroteskWeb-Bold", Helvetica, Arial, sans-serif;
  background: none;
  border: 0;
  border-radius: 0;
  outline: 0;
  -webkit-appearance: none;
}

.search-submit {
  margin-top: 23px;
  font-size: 1.2rem;
  background: none;
  border: 0;
}

@media screen and (max-width: 900px) {
  .search-submit {
    margin-top: 10px;
  }
}

.tt-hint {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  color: #e12d38;
}

.tt-suggestion {
  padding: 5px 0;
  margin: 0;
  font-size: 3rem;
  line-height: 0.95em;
  opacity: 0.75;
  transition: opacity 180ms ease-in-out, text-indent 180ms ease-in-out;
}

@media screen and (max-width: 600px) {
  .tt-suggestion {
    font-size: 2rem;
  }
}

.tt-suggestion.tt-cursor, .tt-suggestion:hover {
  width: 100%;
  text-indent: 5px;
  cursor: pointer;
  opacity: 1;
}

.page-inner {
  max-width: 850px;
  padding: 0 10%;
  margin: 100px auto 0;
}

@media screen and (max-width: 900px) {
  .page-inner {
    margin-top: 50px;
  }
}

@media screen and (max-width: 500px) {
  .page-inner {
    padding: 0;
    margin-top: 0;
  }
}

.page-inner p,
.page-inner .faculty-list {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

@media screen and (max-width: 500px) {
  .page-inner p,
  .page-inner .faculty-list {
    font-size: 1.1rem;
    line-height: 1.5rem;
  }
}

.faculty-list {
  display: flex;
}

.faculty-list .span1 {
  width: 50%;
}

.error-body {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.emoji {
  position: absolute;
}

.emoji.big {
  font-size: 60px;
}

.year-select-wrapper {
  display: flex;
  height: 100%;
  flex-wrap: nowrap;
  align-items: center;
  align-content: stretch;
  justify-content: space-between;
  padding: 50px 0;
  flex-direction: column;
}

.year-item {
  display: flex;
  width: 100%;
  height: 100%;
  font-size: 2rem;
  color: #fff;
  letter-spacing: 1px;
  background: none;
  opacity: 0;
  align-items: center;
  justify-content: center;
  transition: background 180ms ease-in-out;
}

.year-item.loaded {
  opacity: 1;
}

.year-item.active, .year-item:hover {
  background-image: url("../images/underline-l-w.svg");
  animation: backAnimate 600ms linear infinite;
}

.logo {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  color: rgba(14, 14, 15, 0.25);
  background: none;
  transition: opacity 500ms ease-in-out, color 180ms ease-in-out;
}

.logo:hover {
  color: #e75a62;
}

.home .logo {
  color: #fff;
  opacity: 0.25;
}

.logo.invert {
  color: #fff;
}

@media screen and (max-width: 500px) {
  .logo {
    width: 8.1ch;
    overflow: hidden;
    white-space: nowrap;
  }
}

.heading-inner {
  position: fixed;
  top: 20px;
  left: 60px;
  z-index: 300;
  font-size: 1.2rem;
  color: #0e0e0f;
  transition: opacity 180ms ease-in-out;
}

.heading-inner.sticky-unpinned {
  opacity: 0.25;
}

.heading-inner:hover {
  opacity: 1;
}

@media screen and (max-width: 900px) {
  .heading-inner {
    left: 20px;
  }
}

.home .heading-inner {
  color: #fff;
}

.header-item {
  padding-top: 2px;
  padding-bottom: 6px;
  margin-left: 20px;
  line-height: 1.1em;
  background-color: transparent;
  background-image: url("../images/underline-w.svg");
  background-repeat: repeat-x;
  background-position: 0 100%;
  background-size: 23px 8px;
  border: 0;
  transition: color 180ms ease-in-out, opacity 180ms ease-in-out;
  animation: backAnimateSmall 500ms linear infinite;
  animation-play-state: paused;
}

.header-item:hover, .header-item:focus {
  color: #e75a62;
  animation-play-state: running;
}

.header-item.inactive {
  opacity: 0.3;
}

.header-item.inactive:hover, .header-item.inactive:focus {
  color: #0e0e0f;
}

.header-item.reverse {
  color: #fff;
  animation-play-state: running;
}

@media screen and (max-width: 900px) {
  .header-item {
    padding-right: 5px;
    padding-left: 5px;
  }
}

@media screen and (max-width: 500px) {
  .header-item {
    padding-right: 0;
    padding-left: 0;
  }
}

.section-indicator {
  position: fixed;
  top: 45%;
  left: 40px;
  letter-spacing: 1px;
  background: none;
  transition: color 180ms ease-in-out;
  transform: rotate(-90deg);
  transform-origin: left bottom;
}

.section-indicator:hover {
  color: #e75a62;
}

.single .section-indicator {
  opacity: 0.75;
}

@media screen and (max-width: 710px) {
  .section-indicator {
    display: none;
  }
}

@media screen and (max-width: 900px) {
  .section-indicator-index {
    position: static;
    display: block;
    text-align: center;
    transform: rotate(0deg);
  }
}

.single-illustrator {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
}

.illustrator-meta {
  flex: 1 1 30%;
}

@media screen and (max-width: 900px) {
  .illustrator-meta {
    flex: 1 1 100%;
  }
}

.illustrator-meta .illustrator-meta-wrapper {
  position: fixed;
  top: 0;
  left: 60px;
  display: flex;
  width: calc(30% - 70px);
  height: 100%;
  transition: opacity 180ms ease-in-out;
  flex-flow: row wrap;
  align-items: center;
}

@media screen and (max-width: 900px) {
  .illustrator-meta .illustrator-meta-wrapper {
    position: static;
    width: 100%;
    max-width: 600px;
    height: auto;
    margin: 0 auto;
  }
  .illustrator-meta .illustrator-meta-wrapper.inactive {
    opacity: 0.3;
  }
}

@media screen and (max-width: 500px) {
  .illustrator-meta .illustrator-meta-wrapper {
    width: 100%;
  }
}

.illustrator-meta .illustrator-meta-description {
  width: 100%;
}

.illustrator-nav-single {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  font-style: italic;
  background: rgba(231, 90, 98, 0.25);
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.05);
  transition: opacity 180ms ease-in-out;
  justify-content: space-between;
}

@media screen and (max-width: 900px) {
  .illustrator-nav-single {
    position: fixed;
    bottom: 0;
    z-index: 100;
    width: 100%;
    background: rgba(14, 14, 15, 0.5);
  }
  .illustrator-nav-single.inactive {
    pointer-events: none;
    opacity: 0;
  }
}

.illustrator-nav-single .nav-previous,
.illustrator-nav-single .nav-next {
  display: flex;
  width: 50%;
}

.illustrator-nav-single .nav-next {
  text-align: right;
}

.illustrator-nav-single a {
  display: block;
  width: 100%;
  padding: 8px 10px;
  background: none;
  transition: background 180ms ease-out;
}

.illustrator-nav-single a:hover, .illustrator-nav-single a:focus {
  background: rgba(231, 90, 98, 0.5);
}

.illustrator-gallery-container {
  margin-top: 20px;
  flex: 1 1 70%;
}

@media screen and (max-width: 900px) {
  .illustrator-gallery-container {
    max-width: 600px;
    flex: 1 1 100%;
  }
}

.illustrator-gallery-container .gallery {
  max-width: 1240px;
  margin: 0 auto;
}

@media screen and (max-width: 900px) {
  .illustrator-gallery-container .gallery {
    margin-right: -20px;
  }
}

.illustrator-gallery-container .gallery-item {
  width: 50%;
  padding: 0 20px 20px 0;
  opacity: 0;
  transform: scale(0.95);
}

@media screen and (max-width: 500px) {
  .illustrator-gallery-container .gallery-item {
    width: 100%;
  }
}

.illustrator-gallery-container .gallery-item.velocity-animating {
  transition: transform 500ms;
}

.illustrator-gallery-container .gallery-item.loaded {
  transform: scale(1);
}

.illustrator-gallery-container a {
  display: block;
  cursor: zoom-in;
}

.illustrator-gallery-container a:focus {
  outline: 0;
  box-shadow: 0 0 3px 1px rgba(231, 90, 98, 0.5);
}

.title {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  position: fixed;
  top: 20px;
  bottom: 20px;
  left: 60px;
  z-index: 100;
  display: flex;
  width: calc(33.3333333333% - 60px);
  padding-right: 20px;
  color: #fff;
  opacity: 0;
  transition: opacity 180ms ease-in-out;
  transform: scale(0.95);
  justify-content: center;
}

@media screen and (max-width: 900px) {
  .title {
    background: rgba(14, 14, 15, 0.8);
  }
}

@media screen and (max-width: 1024px) {
  .title {
    width: calc(40% - 60px);
  }
}

@media screen and (max-width: 500px) {
  .title {
    display: none;
    width: 100%;
  }
}

@media screen and (max-height: 400px) and (max-width: 900px) {
  .title {
    display: none;
  }
}

.title .message-wrapper {
  display: block;
  margin-top: 1.25em;
}

.title .message {
  padding-bottom: 8px;
  color: #e75a62;
  background-image: url("../images/underline.svg");
  background-repeat: repeat-x;
  background-position: 0 100%;
  background-size: 30px 10px;
  animation: backAnimate 2s linear infinite;
  -webkit-font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1, 'dlig' 1;
          font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1, 'dlig' 1;
}

.title .title-primary {
  margin-top: 0;
  margin-bottom: 1em;
  font-family: "FoundersGroteskWeb-Bold", Helvetica, Arial, sans-serif;
  font-size: 2rem;
  line-height: 1em;
}

@media screen and (max-width: 900px) {
  .title .title-primary {
    margin-right: 20px;
  }
}

.title .title-secondary {
  line-height: 1.25em;
}

.title .title-unit {
  align-self: center;
  flex: 0 0 100%;
}

.title .colophon {
  position: absolute;
  bottom: 20px;
  margin-bottom: 0;
  font-size: 0.813em;
  line-height: 1.1em;
}

.title .colophon a {
  color: #e75a62;
  background: none;
}

.title.velocity-animating {
  transition: transform 500ms;
}

.title.loaded {
  opacity: 1;
  transform: scale(1);
}

@media screen and (max-width: 900px) {
  .title {
    top: 0;
    bottom: 0;
    left: 0;
    width: 50%;
    padding-right: 0;
    padding-left: 20px;
  }
  .title.sticky-unpinned {
    pointer-events: none;
    opacity: 0;
  }
  .title.sticky-pinned {
    opacity: 1;
  }
}

.illustrator {
  transform: scale(0.95);
  opacity: 0;
  width: 25%;
}

.home .illustrator {
  width: 33.3333333333%;
}

.illustrator .illustrator-meta-container {
  margin-bottom: 1em;
  font-size: 0.95em;
  line-height: 1.2em;
  opacity: 0.5;
  transition: opacity 140ms ease-in-out, color 140ms ease-in-out;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media screen and (max-width: 900px) {
  .illustrator .illustrator-meta-container {
    display: none;
  }
}

.illustrator .illustrator-title {
  margin-bottom: 5px;
  font-size: 1em;
  line-height: 1.2em;
}

.illustrator .illustrator-name {
  font-family: "minion-pro", Times, "Times New Roman", serif;
}

.illustrator .illustrator-link {
  display: block;
  padding: 0 20px 20px 0;
  background: none;
}

.illustrator:hover .illustrator-meta-container {
  color: #e75a62;
  opacity: 1;
}

.illustrator.velocity-animating {
  transition: transform 500ms;
}

.illustrator.loaded {
  transform: scale(1);
}

@media screen and (min-width: 1350px) {
  .illustrator {
    width: 20%;
  }
}

@media screen and (max-width: 900px) {
  .illustrator {
    width: 33.3333333333%;
  }
}

@media screen and (max-width: 500px) {
  .illustrator {
    width: 50%;
  }
}

@media screen and (min-width: 1928px) {
  .illustrator {
    width: 12.5%;
  }
}

.home {
  background: #0e0e0f;
}

@media screen and (min-width: 1350px) {
  .home .illustrator {
    width: 25%;
  }
}

@media screen and (max-width: 1024px) {
  .home .illustrator {
    width: 50%;
  }
}

@media screen and (max-width: 900px) {
  .home .illustrator {
    width: 25%;
  }
}

@media screen and (max-width: 500px) {
  .home .illustrator {
    width: 50%;
  }
}

@media screen and (min-width: 1928px) {
  .home .illustrator {
    width: 20%;
  }
}

.home .illustrator a {
  color: #fff;
}

.search-title {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  top: 55%;
  z-index: 100;
  font-size: 1.2rem;
  letter-spacing: 0;
}

.search-title mark {
  color: #e75a62;
  background: transparent;
}

.illustrators-grid {
  margin-top: 70px;
  margin-left: 40px;
}

@media screen and (max-width: 900px) {
  .illustrators-grid {
    margin-top: 20px;
  }
}

.illustrators-grid.home-grid {
  width: calc(66.6666666667% + 20px);
  padding-top: 20px;
  margin-top: 0;
  margin-left: 33.3333333333%;
}

@media screen and (max-width: 1024px) {
  .illustrators-grid.home-grid {
    width: calc(60% + 20px);
    margin-left: 40%;
  }
}

@media screen and (max-width: 900px) {
  .illustrators-grid.home-grid {
    width: calc(100% + 20px);
    margin-left: 0;
  }
}

@media screen and (max-width: 500px) {
  .illustrators-grid.home-grid {
    width: calc(100% + 20px);
  }
}

@media screen and (max-width: 900px) {
  .illustrators-grid {
    margin-right: -20px;
    margin-left: 0;
  }
}

input {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-family: "FoundersGroteskWeb-Bold", Helvetica, Arial, sans-serif;
  border: 0;
}

.btn:focus,
button:focus {
  outline: thin dotted;
}

::-webkit-input-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

:-moz-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

::-moz-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

:-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

/*# sourceMappingURL=data:application/json;base64, */
