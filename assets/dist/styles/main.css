/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

.hidden {
  display: none;
  opacity: 0;
}

.truncate {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.hide-text {
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap;
}

@font-face {
  font-family: "FoundersGroteskWeb-Bold";
  src: url("../fonts/FoundersGroteskWeb-Bold.eot");
  src: url("../fonts/FoundersGroteskWeb-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/FoundersGroteskWeb-Bold.woff") format("woff");
}

.loader {
  position: fixed;
  right: 0;
  bottom: 0;
  z-index: 999;
  top: 50%;
  left: 50%;
}

.loader .loader-text {
  color: red;
}

html {
  overflow-x: hidden;
  -webkit-tap-highlight-color: transparent;
}

body {
  height: 100%;
  font: 87.5%/1.5 "Neutral", Helvetica, Arial, sans-serif;
  color: #666;
  background: #fff;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

::-moz-selection {
  background: #ffff00;
}

::selection {
  background: #ffff00;
}

a {
  color: #000;
  text-decoration: none;
  border-width: 0 0 3px;
  border-image-source: url("../images/wavy.b.svg");
  border-image-slice: 0 0 3 0;
  border-image-width: 3px 6px;
  border-image-outset: 0 6px 1px 6px;
  border-image-repeat: repeat;
}

a:hover {
  border-image: none;
}

a img {
  display: block;
}

.screen-reader-shortcut {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  position: absolute;
  left: 60px;
  width: 1px;
  height: 1px;
  margin: 0;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

.screen-reader-shortcut:focus {
  top: 0;
  z-index: 600;
  width: auto;
  height: auto;
  clip: auto;
}

h1, h2, .heading, p, button, input {
  font-feature-settings: "kern", "liga", "clig", "calt";
  font-variant-ligatures: common-ligatures, contextual;
  font-kerning: normal;
  text-rendering: optimizeLegibility;
}

h1, h2, .heading {
  color: #000;
  font-family: "Neutral", Helvetica, Arial, sans-serif;
  font-size: 1.618034em;
  font-weight: normal;
}

p {
  font-weight: normal;
}

em {
  font-family: "Neutral";
}

abbr {
  font-feature-settings: "c2sc", "smcp";
}

h1 {
  font-style: normal;
}

figure {
  margin: 0;
}

figure img {
  display: block;
  max-width: 100%;
  height: auto;
}

#full-image {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  object-fit: contain;
  max-width: 100%;
  max-height: 100%;
  position: relative;
  z-index: 120;
  will-change: transform;
  transform: translateY(15px);
  transition: transform 400ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.gallery-icon-anchor {
  cursor: zoom-in;
}

ul {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

.panel {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  width: calc(30% - 20px);
  z-index: 200;
  outline: 0;
  transform: translateX(-100%);
  background: #0e0e0f;
  box-shadow: 0 2px 0 4px rgba(0, 0, 0, 0.05);
  color: #fff;
  display: flex;
  align-content: center;
  align-items: center;
}

.panel-inner {
  padding-left: calc(4% + 40px);
  width: 100%;
}

.close-panel {
  z-index: 400;
  display: block;
  position: absolute;
  cursor: pointer;
  top: 20px;
  right: 20px;
  width: 22px;
  height: 22px;
  background: url("../images/close.svg") no-repeat;
}

button {
  background: transparent;
  border: 0;
  padding: 0;
}

.panel-colophon {
  opacity: 0;
  border: 0;
  position: fixed;
  bottom: 20px;
  right: 25px;
  z-index: 120;
  color: #fff;
  width: 18px;
  height: 25px;
  background: url("../images/colophon.svg") no-repeat;
}

.search-container {
  -ms-grid-row-align: flex-start;
      align-items: flex-start;
}

.search-form {
  display: flex;
  margin-top: 10em;
  align-items: center;
}

.search-form label {
  position: relative;
  width: 100%;
}

.search-form .twitter-typeahead {
  width: 100%;
}

.search-form .search-field {
  width: 100%;
  box-sizing: border-box;
  padding: 1em 20px;
  font-size: 1.618034em;
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.02);
  transition: background 300ms ease-in-out;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.search-form .search-field:focus, .search-form .search-field:hover {
  background: rgba(255, 255, 255, 0.05);
  outline: 0;
}

.search-form .search-submit {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  width: 44px;
  height: 44px;
  margin-right: 15px;
  margin-left: 15px;
  background: url("../images/search.svg") no-repeat center center;
}

.search-form .tt-hint {
  color: rgba(255, 255, 255, 0.05);
}

.search-form .tt-menu {
  width: 100%;
  font-size: 1.618034em;
}

.search-form .tt-suggestion {
  width: 100%;
  padding: 1em 20px;
  cursor: pointer;
  background: rgba(255, 255, 255, 0.02);
  transition: background, 300ms, ease-in-out;
}

.search-form .tt-suggestion:hover {
  background: rgba(255, 255, 255, 0.05);
}

.search-loader {
  position: absolute;
  top: 150%;
  left: calc(50% - 1em/2);
  display: none;
  width: 1em;
  height: 1em;
  background: #fff;
  border-radius: 50%;
  animation-name: shake;
  animation-duration: 1s;
  animation-fill-mode: both;
  animation-iteration-count: infinite;
}

.year-select .panel-inner {
  height: 100%;
  padding-top: 150px;
  padding-bottom: 80px;
}

.year-select-wrapper {
  display: flex;
  height: 100%;
  flex-direction: column;
  justify-content: space-around;
}

.year-item {
  display: block;
  font-size: 2.6180340252em;
  color: #fff;
  border: 0;
  opacity: 0;
  transform: translateX(-20px);
  transition: text-indent 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.year-item:hover {
  text-indent: 10px;
}

.year-item.active:hover::after {
  animation-name: shake;
  animation-duration: 1s;
  animation-fill-mode: both;
}

.year-item.active::after {
  display: inline-flex;
  width: 0.8em;
  height: 0.8em;
  margin-left: 0.8em;
  content: "";
  background: #fff;
  border-radius: 50%;
}

@keyframes shake {
  from,
  to {
    transform: translate3d(0, 0, 0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-5px, 0, 0);
  }
  20%, 40%, 60%, 80% {
    transform: translate3d(5px, 0, 0);
  }
}

.logo {
  border-image: none;
  font-weight: 700;
  transition: color 300ms ease-in-out;
}

.logo.invert {
  color: #fff;
}

.logo-wrapper {
  margin-bottom: 0.5em;
}

.heading-inner {
  position: fixed;
  top: 20px;
  left: 40px;
  z-index: 300;
}

.heading-inner .header-item {
  padding: 0.25em 0;
  transition: color 300ms ease-in-out;
}

.heading-inner .header-item.reverse {
  color: #fff;
}

.single-illustrator {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
}

.illustrator-gallery-container {
  flex: 1 1 70%;
  background: #f1f1f1;
  min-height: 100vh;
}

.illustrator-gallery-container .gallery {
  margin: 0 1%;
}

.illustrator-gallery-container .grid-sizer,
.illustrator-gallery-container .gallery-item {
  width: 49.5%;
  margin-bottom: 1%;
}

.illustrator-gallery-container .gutter-sizer {
  width: 1%;
}

.illustrator-gallery-container .gallery-item {
  opacity: 0;
}

.illustrators-grid .grid-sizer,
.illustrators-grid .gallery-item {
  width: 24.25%;
  margin-bottom: 1%;
}

.illustrators-grid .gutter-sizer {
  width: 1%;
}

.illustrator-meta {
  flex: 1 1 30%;
  font-size: 0.857em;
  position: relative;
  box-shadow: 0 2px 0 4px rgba(0, 0, 0, 0.05);
  z-index: 20;
}

.illustrator-meta .illustrator-meta-wrapper {
  position: fixed;
  top: 0;
  left: 40px;
  display: flex;
  width: calc(30% - 40px);
  height: 100%;
  transition: opacity 180ms ease-in-out;
  flex-flow: row wrap;
  align-items: flex-end;
  font-size: 0.929em;
}

.illustrator-meta .illustrator-meta-wrapper p {
  margin-top: 0;
}

.illustrator-meta .illustrator-meta-wrapper h1,
.illustrator-meta .illustrator-meta-wrapper h2 {
  font-size: 1em;
  line-height: 1em;
  padding: 0.67em 0;
  margin: 0;
}

.illustrator-meta .illustrator-meta-wrapper .thesis-title {
  line-height: 1.4em;
}

.illustrator-meta .illustrator-meta-wrapper-inner {
  width: 100%;
  margin-right: 20px;
}

.illustrator-meta .illustrator-meta-description {
  margin-bottom: 2em;
}

.illustrator-meta .illustrator-meta-description p {
  margin-left: 0.5em;
}

.illustrator-meta .meta {
  line-height: 1.85em;
}

.illustrator-meta .meta div {
  padding-left: 0.5em;
}

.illustrator-nav-single {
  align-self: flex-end;
  display: flex;
  flex-grow: 1;
  max-width: 100%;
}

.illustrator-nav-single a {
  border-image: none;
  border-bottom: 4px solid #000;
  display: block;
  padding: 10px;
}

.illustrator-nav-single .nav-previous,
.illustrator-nav-single .nav-next {
  flex-grow: 1;
}

.illustrator-nav-single .nav-previous:empty,
.illustrator-nav-single .nav-next:empty {
  display: none;
}

.illustrator-nav-single .nav-next {
  text-align: right;
}

.illustrator-nav-single .nav-next a {
  padding-right: 20px;
}

.illustrator-nav-single .section-indicator {
  font-weight: 700;
  padding-left: 0.5em;
  white-space: nowrap;
}

.illustrator-nav-single .section-indicator .indicator {
  font-weight: 400;
  margin-right: 4px;
}

.image-modal-wrapper {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 30%;
  z-index: 100;
  background: #0e0e0f;
}

.image-modal-wrapper .image-modal-container {
  display: flex;
  position: absolute;
  align-items: center;
  justify-content: center;
  top: 2%;
  right: 2%;
  bottom: 2%;
  left: 2%;
}

.miniview-container {
  position: absolute;
  bottom: 20px;
  right: 20px;
  z-index: 130;
}

.miniview {
  width: 22px;
  -webkit-column-count: 2;
     -moz-column-count: 2;
          column-count: 2;
  -webkit-column-gap: 2px;
     -moz-column-gap: 2px;
          column-gap: 2px;
  line-height: 0;
  transition: width 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.miniview:hover {
  width: 33px;
}

.miniview .mini-item {
  cursor: pointer;
  width: 100%;
  padding-bottom: 2px;
}

.miniview .mini-item-inner {
  display: block;
  max-width: 100%;
  height: auto;
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: border 300ms ease-in-out, background 300ms ease-in-out;
  padding: 2px;
}

.miniview .mini-item-inner.active, .miniview .mini-item-inner:hover {
  border: 1px solid rgba(255, 255, 255, 0.5);
}

.miniview .mini-item-inner:hover {
  background: rgba(255, 255, 255, 0.25);
}

.screen-reader-shortcut {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  position: absolute;
  top: 0;
  left: 60px;
  width: 1px;
  height: 1px;
  padding: 10px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  color: #fff;
}

.screen-reader-shortcut:focus {
  top: 2;
  z-index: 600;
  width: auto;
  height: auto;
  padding: 0 10px;
  clip: auto;
  line-height: 49px;
}

input {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-family: "Neutral", Helvetica, Arial, sans-serif;
}

.btn:focus,
button:focus {
  outline: thin dotted;
}

::-webkit-input-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

:-moz-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

::-moz-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

:-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.75);
}

/*# sourceMappingURL=data:application/json;base64, */
